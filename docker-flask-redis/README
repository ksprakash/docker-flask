=======================================================================================================================
HOW TO START  A  SERVICES 
STEP 1: FIRST INSTALL PREREQUISITES docker and docker-compose
STEP 2: GIT CLONE <REPO>
STEP 3: OPEN FIREWALL PORTS for 80,6379(NO NEED of 6379, web framework can talk to redis service internally)
STEP 4: In location of app.py,requirememts.txt,Dockerfile,docker-compose.yml, give command
docker-compose up

http://<IPADDRESS>             //WHAT-TO-DO
http://<IPADDRESS>/add_word/word=<word>    //using this store some words to test
http://<IPADDRESS>/wordslist               //Using this we can see what words are added 
http://<IPADDRESS>/autocomplete/query=<word>  //Gives all matching patterns of the word

=======================================================================================================================


#Install docker and docker compose on server needed
sudo yum update -y

#Install Docker community edition on Centos7

sudo yum install -y yum-utils sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo sudo yum install docker-ce docker-ce-cli containerd.io sudo systemctl start docker

sudo chown $(id -u):$(id -g) /var/run/docker.sock sudo usermod -a -G docker centos


Install docker compose sudo curl -L "https://github.com/docker/compose/releases/download/1.26.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose


Make sure Dockerfile, docker-compose.yml, app.py,requirements.txt  in same location

requirements.txt----------> Installs flask framework, redis ,requests

Dockerfile-------->copies app.py,requirements.txt  and builds python:3 image with required flask env variables,exposing ports 80,command to run 
python app.we can see whats inside Dockerfile

app.py------------> The main logic of framework resides here with three endpoints: 
one for /add-word/word=<word>
second one for /autocomplete/query=<word>   (ALL MATCHING PATTERNS WILL RETURN: used inbuild keys(pattern=<word*>)
third one for /wordslist 

finally docker-compose.yml----> creates two services by exposing required ports

After git cloning to server---> execute docker-compose up

It will take care provisioning of twor services, test trial on web browser.

Thank you
